@using Online_book_shop.Models.ViewModel;
@using Newtonsoft.Json;
@using Online_book_shop.Models;
@using Online_book_shop.Handlers.Business;
@{
    ViewBag.Title = "BulkPromotion";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<DataObjVM> list = ViewBag.Items;
    List<Author> Authors = ViewBag.Authors;
    List<Publisher> publishers = ViewBag.Publishers;
    BulkPromotionVM model = ViewBag.FilterModel;
    Configuration clientTimeOffSet = BusinessHandlerConfigurations.GetConfigByKey("TIME_OFFSET");
}
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<div class="col-lg-12 panel-body">
    <form method="post" action="/Admin/Promotion/BulkPromotion">
        <table class="table">
            <tbody>
                <tr>

                    <td>
                        Filter By  Author <br />
                        <div class="select col-lg-3">
                            <select class="form-control" name="AuthorId" id="select-author">
                                @{
                                    int selected_author = 0;
                                    if (model != null && model.AuthorId > 0)
                                    {
                                        selected_author = model.AuthorId;
                                    }
                                }
                                <option value="0" @(selected_author == 0 ? "selected" : "")>--All Author--</option>
                                @foreach (Author author in Authors)
                                {
                                    <option value="@author.Id" @(selected_author == author.Id ? "selected" : "")>@author.Name</option>
                                }

                            </select>

                        </div>
                    </td>
                    <td>
                        Filter By  Publisher <br />
                        <div class="select col-lg-3">
                            <select class="form-control" name="PublisherId" id="select-publisher">
                                @{
                                    int selected_publisher = 0;
                                    if (model != null && model.PublisherId > 0)
                                    {
                                        selected_publisher = model.PublisherId;
                                    }
                                }
                                <option value="0" @(selected_publisher == 0 ? "selected" : "")>--All Publishers--</option>
                                @foreach (Publisher publisher in publishers)
                                {
                                    <option value="@publisher.Id" @(selected_publisher == publisher.Id ? "selected" : "")>@publisher.Name</option>
                                }

                            </select>

                        </div>
                    </td>
                </tr>
                <tr>

                    <td>
                    </td>
                    <td>
                        <input class="btn btn-warning btn-sm float-right" value="Filter" type="submit" />
                    </td>
                </tr>

            </tbody>
        </table>
    </form>

</div>
<div class="col-lg-12">
    <div class="panel panel-danger">
        <div class="panel-heading">
            Promotion Details
        </div>
        <div class="col-lg-12 panel-body" style="border: solid 1px;border-radius: 5px;padding: 20px;">
            @{
                string startdt = DateTime.Today.ToString("yyyy-MM-dd HH:mm");
                string enddt = DateTime.Today.ToString("yyyy-MM-dd HH:mm");

                if (string.IsNullOrEmpty(Request.QueryString["StartDate"]))
                {
                    startdt = DateTime.Today.ToString("yyyy-MM-dd HH:mm");
                }
                else
                {
                    startdt = Request.QueryString["StartDate"];
                }
                if (string.IsNullOrEmpty(Request.QueryString["EndDate"]))
                {
                    enddt = DateTime.Now.AddMonths(1).ToString("yyyy-MM-dd HH:mm");
                }
                else
                {
                    enddt = Request.QueryString["EndDate"];
                } }
            <div class="form-group row col-lg-8">
                <label class="col-sm-4 col-form-label">Date Range</label>
                <div class="c-datepicker-date-editor J-datepicker-range mt10">
                    <i class="c-datepicker-range__icon kxiconfont icon-clock"></i>
                    <input placeholder="Start" name="StartDate" id="StartDate"  class="c-datepicker-data-input" value="@startdt">
                    <span class="c-datepicker-range-separator">-</span>
                    <input placeholder="End" name="EndDate" id="EndDate" class="c-datepicker-data-input" value="@enddt">
                </div>
            </div>

            @*<div class="form-group row col-lg-4">
                    <label class="col-sm-4 col-form-label">Start</label>
                    <div class="col-sm-8">
                        <input type="datetime" placeholder="2021-08-12" class="form-control-plaintext" id="startDate" value="@DateTime.Today.ToString("yyyy-M-d")">
                    </div>
                </div>
                <div class="form-group row  col-lg-4">
                    <label class="col-sm-4 col-form-label">End</label>
                    <div class="col-sm-8">
                        <input type="datetime" placeholder="2021-08-12" class="form-control-plaintext" id="endDate" value="@DateTime.Today.AddMonths(1).ToString("yyyy-M-d")">
                    </div>
                </div>*@

            <div class="form-group row  col-lg-4">
                <label class="col-sm-4 col-form-label">Percentage</label>
                <div class="col-sm-8">
                    <input type="number" min="0" max="100" placeholder="20%" class="form-control-plaintext" id="percentage" value="20">
                </div>
            </div>
            <button class="btn btn-primary float-right btn-bulk-update-promotion">Add</button>
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <div class="alert alert-danger col-lg-12" role="alert">
                This promotion will apply all selected books and automatically unapplicable all other configured promotion for selected books.</label>
            </div>
        </div>
    </div>
</div>


       
        

<div class="col-lg-12">
    
    <div class="col-lg-6">

        @if (list.Where(x => x.Name.Contains("Normal Cover")) != null)
        {
            <h3>Normal Covers</h3>
            <div class="form-check">
                <input name="product_all" class="form-check-input  checked_all" type="checkbox" value="" id="flexCheckIndeterminate">
                <label class="form-check-label" for="flexCheckIndeterminate">
                    Select All
                </label>
            </div>
            foreach (DataObjVM obj in list.Where(x => x.Name.Contains("Normal Cover")))
            {
                ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
                <div class="col-lg-12 author_@obj.BookAuthorId publisher_@obj.BookPublisherId check-box-container">
                    <div class="col-lg-1">
                        <input value="@obj.Id" data-author="@obj.BookAuthorId" data-publisher="@obj.BookPublisherId" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox checkbox-nc" type="checkbox">
                    </div>
                    <div class="col-lg-11">
                        @obj.Name
                    </div>
                </div>
            }
        }

    </div>
    <div class="col-lg-6">

        @if (list.Where(x => x.Name.Contains("Hard Bind Cover")) != null)
        {
            <h3>Hard Bind Cover</h3>
            <div class="form-check">
                <input name="product_all" class="form-check-input  checked_hard_bind_all" type="checkbox" value="" id="flexCheckIndeterminate">
                <label class="form-check-label" for="flexCheckIndeterminate">
                    Select All
                </label>
            </div>
            foreach (DataObjVM obj in list.Where(x => x.Name.Contains("Hard Bind Cover")))
            {
                ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
                <div class="col-lg-12 author_@obj.BookAuthorId publisher_@obj.BookPublisherId check-box-container">
                    <div class="col-lg-1">
                        <input value="@obj.Id" data-author="@obj.BookAuthorId" data-publisher="@obj.BookPublisherId" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox_hard_bind checkbox-hb" type="checkbox">
                    </div>
                    <div class="col-lg-11">
                        @obj.Name
                    </div>
                </div>
            }
        }

        @if (list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))) != null && list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))).Count() > 0)
        {
            <h3>Other Versions</h3>
            <div class="form-check">
                <input name="product_all" class="form-check-input  checked_other_all" type="checkbox" value="" id="flexCheckIndeterminate">
                <label class="form-check-label" for="flexCheckIndeterminate">
                    Select All
                </label>
            </div>
            foreach (DataObjVM obj in list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))))
            {
                ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
                <div class="col-lg-12 author_@obj.BookAuthorId publisher_@obj.BookPublisherId check-box-container">
                    <div class="col-lg-1">
                        <input value="@obj.Id" data-author="@obj.BookAuthorId" data-publisher="@obj.BookPublisherId" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox_other checkbox-ov" type="checkbox">
                    </div>
                    <div class="col-lg-11">
                        @obj.Name
                    </div>
                </div>
            }
        }
    </div>
</div>

<script type="text/javascript">
    $('.checked_all').on('change', function () {
        $('.checkbox').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox').change(function () { //".checkbox" change
        if ($('.checkbox:checked').length == $('.checkbox').length) {
            $('.checked_all').prop('checked', true);
        } else {
            $('.checked_all').prop('checked', false);
        }
    });
    $('.checked_hard_bind_all').on('change', function () {
        $('.checkbox_hard_bind').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox_hard_bind').change(function () { //".checkbox" change
        if ($('.checkbox_hard_bind:checked').length == $('.checkbox_hard_bind').length) {
            $('.checked_hard_bind_all').prop('checked', true);
        } else {
            $('.checked_hard_bind_all').prop('checked', false);
        }
    });
    $('.checked_other_all').on('change', function () {
        $('.checkbox_other').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox_other').change(function () { //".checkbox" change
        if ($('.checkbox_other:checked').length == $('.checkbox_other').length) {
            $('.checked_other_all').prop('checked', true);
        } else {
            $('.checked_other_all').prop('checked', false);
        }
    });
</script>

