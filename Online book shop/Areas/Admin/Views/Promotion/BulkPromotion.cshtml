@using Online_book_shop.Models.ViewModel;
@using Newtonsoft.Json;
@{
    ViewBag.Title = "BulkPromotion";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<DataObjVM> list = ViewBag.Items;
}
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<div class="col-lg-12">
    <div class="col-lg-12">
        
    </div>
    <div class="col-lg-6">
        <h3>Normal Covers</h3>
        <div class="form-check">
            <input name="product_all" class="form-check-input  checked_all" type="checkbox" value="" id="flexCheckIndeterminate">
            <label class="form-check-label" for="flexCheckIndeterminate">
                Select All
            </label>
        </div>
        @foreach (DataObjVM obj in list.Where(x => x.Name.Contains("Normal Cover")))
        {
            ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
            <div class="col-lg-12">
                <div class="col-lg-1">
                    <input value="@obj.Id" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox" type="checkbox">
                </div>
                <div class="col-lg-11">
                    @obj.Name
                </div>
            </div>
        }
    </div>
    <div class="col-lg-6">
        <h3>Hard Bind Cover</h3>
        <div class="form-check">
            <input name="product_all" class="form-check-input  checked_hard_bind_all" type="checkbox" value="" id="flexCheckIndeterminate">
            <label class="form-check-label" for="flexCheckIndeterminate">
                Select All
            </label>
        </div>
        @foreach (DataObjVM obj in list.Where(x => x.Name.Contains("Hard Bind Cover")))
        {
            ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
            <div class="col-lg-12">
                <div class="col-lg-1">
                    <input value="@obj.Id" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox_hard_bind" type="checkbox">
                </div>
                <div class="col-lg-11">
                    @obj.Name
                </div>
            </div>
        }

        @if (list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))) != null && list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))).Count() > 0)
        {
            <h3>Other Versions</h3>
            <div class="form-check">
                <input name="product_all" class="form-check-input  checked_other_all" type="checkbox" value="" id="flexCheckIndeterminate">
                <label class="form-check-label" for="flexCheckIndeterminate">
                    Select All
                </label>
            </div>
            foreach (DataObjVM obj in list.Where(x => !(x.Name.Contains("Hard Bind Cover") || x.Name.Contains("Normal Cover"))))
            {
                ItemProperty itemProperty = JsonConvert.DeserializeObject<ItemProperty>(obj.OtherPara);
                <div class="col-lg-12">
                    <div class="col-lg-1">
                        <input value="@obj.Id" data-property="@itemProperty.BookPropertyId" name="product" class="checkbox_other" type="checkbox">
                    </div>
                    <div class="col-lg-11">
                        @obj.Name
                    </div>
                </div>
            }
        }
    </div>
</div>

<script type="text/javascript">
    $('.checked_all').on('change', function () {
        $('.checkbox').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox').change(function () { //".checkbox" change
        if ($('.checkbox:checked').length == $('.checkbox').length) {
            $('.checked_all').prop('checked', true);
        } else {
            $('.checked_all').prop('checked', false);
        }
    });
    $('.checked_hard_bind_all').on('change', function () {
        $('.checkbox_hard_bind').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox_hard_bind').change(function () { //".checkbox" change
        if ($('.checkbox_hard_bind:checked').length == $('.checkbox_hard_bind').length) {
            $('.checked_hard_bind_all').prop('checked', true);
        } else {
            $('.checked_hard_bind_all').prop('checked', false);
        }
    });
    $('.checked_other_all').on('change', function () {
        $('.checkbox_other').prop('checked', $(this).prop("checked"));
    });
    //deselect "checked all", if one of the listed checkbox product is unchecked amd select "checked all" if all of the listed checkbox product is checked
    $('.checkbox_other').change(function () { //".checkbox" change
        if ($('.checkbox_other:checked').length == $('.checkbox_other').length) {
            $('.checked_other_all').prop('checked', true);
        } else {
            $('.checked_other_all').prop('checked', false);
        }
    });
</script>

